[filter "lfs"]
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process
	required = true
[user]
	name = Andre Mossi
	email = mossiroberto0392@gmail.com
[alias]
    d = diff
    co = checkout
    ci = commit
    ca = commit -a
    ps = "!git push origin $(git rev-parse --abbrev-ref HEAD)"
    pl = "!git pull origin $(git rev-parse --abbrev-ref HEAD)"
    st = status
    br = branch
    ba = branch -a
    bm = branch --merged
    bn = branch --no-merged
    df = "!git hist | peco | awk '{print $2}' | xargs -I {} git diff {}^ {}"
    hist = log --pretty=format:\"%Cgreen%h %Creset%cd %Cblue[%cn] %Creset%s%C(yellow)%d%C(reset)\" --graph --date=relative --decorate --all
    llog = log --graph --name-status --pretty=format:\"%C(red)%h %C(reset)(%cd) %C(green)%an %Creset%s %C(yellow)%d%Creset\" --date=relative
    open = "!hub browse"
    type = cat-file -t
    dump = cat-file -p
    find = "!f() { git log --pretty=format:\"%h %cd [%cn] %s%d\" --date=relative -S'pretty' -S\"$@\" | peco | awk '{print $1}' | xargs -I {} git diff {}^ {}; }; f"
# edit conflicted file on merge
    edit-unmerged = "!f() { git ls-files --unmerged | cut -f2 | sort -u ; }; vim `f`"
# add conflicted file on merge
    add-unmerged = "!f() { git ls-files --unmerged | cut -f2 | sort -u ; }; git add `f`"
[mergetool "nvimdiff"]
	cmd = nvim -d \"$LOCAL\" \"$REMOTE\" -ancestor \"$BASE\" -merge \"$MERGED\"
	trustExitCode = true
[difftool "nvimdiff"]
	cmd = nvim -d \"$LOCAL\" \"$REMOTE\"
	path =
[diff]
    tool = nvimdiff
[hub]
    protocol = https
[color]
    status = auto
    diff = auto
    branch = auto
    interactive = auto
    grep = auto
    ui = auto
[push]
    default = simple
[core]
	excludesfile = $HOME/.gitignore
	editor = nvim
	ignorecase = false
